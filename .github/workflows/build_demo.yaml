name: Cross-Platform Build

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: Build (${{ matrix.os }} - ${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
            host: x86_64-linux-gnu
            artifact: aria2-linux-x64
          - os: ubuntu-22.04
            arch: aarch64
            host: aarch64-linux-gnu
            artifact: aria2-linux-arm64
          - os: windows-latest
            arch: x86_64
            host: x86_64-w64-mingw32
            artifact: aria2-windows-x64
          - os: macos-latest
            arch: x86_64
            host: x86_64-apple-darwin
            artifact: aria2-macos-x64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-22.04" ]; then
          sudo apt-get update
          sudo apt-get install -y \
            automake autoconf libtool \
            libssh2-1-dev libssl-dev libc-ares-dev libxml2-dev \
            zlib1g-dev libsqlite3-dev pkg-config \
            gcc-${matrix.host} g++-${matrix.host}
        elif [ "${{ matrix.os }}" = "windows-latest" ]; then
          choco install -y mingw
        elif [ "${{ matrix.os }}" = "macos-latest" ]; then
          brew install automake autoconf libtool openssl c-ares libssh2
        fi

    - name: Bootstrap
      run: |
        autoreconf -i
        ./configure \
          --host=${{ matrix.host }} \
          --enable-static=yes \
          --without-libxml2 \
          --with-libssh2 \
          --with-openssl \
          --with-sqlite3 \
          --with-libcares \
          --without-gnutls \
          --without-libnettle \
          --without-libgmp \
          --without-libexpat

    - name: Compile
      run: |
        make -j$(nproc)
        ${{ matrix.host }}-strip src/aria2c

    - name: Rename binary
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          mv src/aria2c.exe src/aria2c-${{ matrix.arch }}.exe
        else
          mv src/aria2c src/aria2c-${{ matrix.arch }}
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: src/aria2c-*
