name: Build aria2 (Modern)

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        compiler: [gcc-13, clang-17]
        include:
          - compiler: gcc-13
            cc: gcc-13
            cxx: g++-13
          - compiler: clang-17
            cc: clang-17
            cxx: clang++-17
    name: Build with ${{ matrix.compiler }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup build environment
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.ccache
            ${{ github.workspace }}/autom4te.cache
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ hashFiles('**/configure.ac') }}

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            ${{ matrix.cc }} \
            ${{ matrix.cxx }} \
            autoconf-archive \
            automake \
            libtool-bin \
            pkg-config \
            # Core dependencies
            libssl-dev \
            libgnutls30-dev \
            libc-ares-dev \
            zlib1g-dev \
            libsqlite3-dev \
            libssh2-2-dev \
            libxml2-dev \
            libcppunit-dev \
            libgmp-dev \
            # Modern compression
            libzstd-dev \
            libbrotli-dev \
            # Tools
            jq patchelf

          # Set compiler alternatives
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/${{ matrix.cc }} 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/${{ matrix.cxx }} 100
          sudo update-alternatives --config gcc
          sudo update-alternatives --config g++

      - name: Configure build
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
          CXXFLAGS: "-O3 -march=native -flto=auto"
        run: |
          ./bootstrap
          ./configure \
            --prefix=/usr \
            --sysconfdir=/etc \
            --with-libcares \
            --with-libxml2 \
            --with-openssl \
            --with-libssh2 \
            --with-libzstd \
            --with-brotli \
            --enable-websocket \
            --enable-jemalloc

      - name: Compile with optimizations
        run: |
          make -j$(($(nproc) + 1)) \
            ARIA2_STATIC=yes \
            STRIP_BINARIES=yes

      - name: Verify binary
        run: |
          file src/aria2c
          ldd src/aria2c | grep -E 'ssl|cares|ssh2'
          ./src/aria2c --check-certificate=false --version

      - name: Package artifact
        uses: actions/upload-artifact@v4
        with:
          name: aria2c-${{ matrix.compiler }}-${{ github.sha }}
          path: |
            src/aria2c
            config.log
          compression-level: 9
          if-no-files-found: error

      - name: Upload release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: src/aria2c
          generate_release_notes: true
